var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.209,1,2.333]],["body/controllers/AppController.html",[0,1.746,1,3.369,2,1.314,3,0.239,4,0.208,5,0.208,6,3.19,7,0.483,8,1.64,9,4.237,10,3.758,11,5.07,12,1.314,13,0.024,14,2.313,15,4.992,16,3.74,17,4.992,18,0.607,19,3.758,20,1.16,21,0.905,22,0.523,23,0.85,24,4.758,25,1.16,26,1.058,27,0.536,28,3.758,29,0.746,30,2.826,31,2.127,32,1.025,33,3.19,34,3.173,35,3.19,36,3.758,37,0.239,38,0.151,39,1.492,40,1.705,41,2.127,42,3.758,43,1.829,44,3.758,45,3.758,46,3.758,47,3.758,48,1.235,49,3.758,50,0.017,51,0.017]],["title/modules/AppModule.html",[52,1.136,53,2.333]],["body/modules/AppModule.html",[1,3.521,2,1.588,3,0.208,4,0.181,5,0.181,13,0.024,27,0.584,29,0.649,34,3.47,35,2.774,37,0.208,38,0.131,50,0.015,51,0.015,52,1.492,53,4.685,54,1.386,55,1.925,56,2.774,57,2.774,58,2.774,59,3.773,60,3.773,61,2.6,62,3.773,63,3.773,64,3.773,65,2.209,66,1.59,67,1.59,68,3.268,69,2.377,70,2.57,71,3.268,72,3.268,73,3.268,74,3.268,75,3.268,76,3.268,77,3.268]],["title/injectables/AppService.html",[34,1.956,78,0.943]],["body/injectables/AppService.html",[3,0.277,4,0.241,5,0.241,7,0.561,8,1.807,9,4.669,13,0.023,18,0.705,20,1.348,21,1.052,22,0.607,23,0.987,24,3.706,25,1.348,26,1.381,27,0.391,29,0.867,34,3.114,37,0.277,38,0.176,48,1.434,50,0.019,51,0.019,78,1.501,79,1.981,80,3.706,81,5.501,82,4.366,83,4.366,84,3.706,85,4.366,86,4.366,87,3.706,88,4.366,89,4.366,90,3.706,91,4.366]],["title/controllers/AuthController.html",[0,1.209,92,2.333]],["body/controllers/AuthController.html",[0,1.06,2,1.06,3,0.193,4,0.168,5,0.168,7,0.39,8,1.415,12,1.506,13,0.024,18,0.696,20,1.33,21,1.038,22,0.599,23,0.974,25,1.33,27,0.564,29,0.602,30,2.836,31,1.716,32,0.828,37,0.193,38,0.122,39,1.204,40,1.376,41,2.438,48,1.415,50,0.015,51,0.015,92,2.907,93,2.574,94,1.866,95,3.033,96,3.681,97,4.308,98,3.033,99,3.684,100,1.866,101,4.308,102,4.308,103,2.907,104,3.227,105,2.651,106,4.308,107,3.033,108,2.256,109,3.033,110,2.542,111,3.033,112,4.308,113,4.308,114,2.438,115,3.227,116,3.033,117,3.033,118,1.866,119,2.651,120,1.866,121,1.866,122,1.476,123,2.651,124,2.574,125,2.836,126,2.574,127,1.866,128,2.574,129,2.574,130,2.574,131,2.272,132,3.033,133,3.033,134,3.033,135,3.033,136,3.033,137,3.033,138,1.866,139,3.033,140,3.033]],["title/modules/AuthModule.html",[52,1.136,59,2.127]],["body/modules/AuthModule.html",[2,1.686,3,0.227,4,0.197,5,0.197,13,0.024,27,0.577,29,0.708,37,0.227,38,0.144,50,0.016,51,0.016,52,1.584,54,1.513,55,2.044,59,4.127,61,2.67,65,2.346,66,1.736,67,1.736,69,2.524,70,2.729,92,3.685,122,1.736,125,3.564,126,3.028,141,3.028,142,3.567,143,3.028,144,3.875,145,3.567,146,3.567,147,3.567,148,3.567,149,2.672,150,2.195,151,3.567,152,3.567,153,3.567,154,2.407,155,3.567,156,3.567,157,3.028,158,3.567,159,3.567,160,3.567]],["title/injectables/AuthService.html",[78,0.943,125,1.956]],["body/injectables/AuthService.html",[3,0.2,4,0.174,5,0.174,7,0.405,8,1.454,13,0.024,18,0.715,20,1.367,21,1.066,22,0.616,23,1,25,0.973,27,0.543,29,0.625,37,0.2,38,0.127,43,2.489,48,1.035,50,0.015,51,0.015,78,1.208,79,1.429,96,2.986,99,3.414,104,2.36,108,2.317,110,2.203,125,2.505,127,1.939,128,2.674,129,2.674,130,2.674,149,2.36,161,2.674,162,2.489,163,2.505,164,2.674,165,2.407,166,6.224,167,3.151,168,4.425,169,3.151,170,2.724,171,1.783,172,3.151,173,3.316,174,1.783,175,3.756,176,2.895,177,1.939,178,2.317,179,2.674,180,2.505,181,2.317,182,2.36,183,1.783,184,1.939,185,4.425,186,3.151,187,3.316,188,3.151,189,3.151,190,1.429,191,3.151]],["title/classes/CreateOrderDto.html",[38,0.139,192,2.127]],["body/classes/CreateOrderDto.html",[3,0.198,4,0.173,5,0.173,7,0.401,12,1.78,13,0.024,16,3.295,18,0.822,22,0.864,26,0.932,27,0.495,32,0.852,37,0.198,38,0.205,50,0.015,51,0.015,105,2.707,114,2.489,192,2.707,193,0.964,194,4.14,195,2.65,196,1.445,197,4.321,198,5.091,199,3.814,200,3.931,201,3.123,202,3.123,203,4.398,204,3.733,205,3.733,206,4.398,207,3.733,208,3.733,209,3.733,210,2.65,211,3.123,212,2.303,213,2.65,214,3.733,215,3.295,216,2.894,217,3.295,218,3.123,219,2.339,220,1.358,221,4.398,222,4.398,223,4.398,224,4.398,225,4.398,226,3.123,227,2.894,228,2.65,229,2.968,230,3.295,231,3.295,232,4.398,233,1.635,234,1.163,235,1.635,236,2.107,237,2.022,238,3.123,239,2.339]],["title/classes/CreateOrderProductDto.html",[38,0.139,200,2.333]],["body/classes/CreateOrderProductDto.html",[3,0.211,4,0.184,5,0.184,7,0.427,12,1.839,13,0.023,18,0.849,22,0.732,26,1.203,27,0.412,32,0.906,37,0.211,38,0.185,50,0.016,51,0.016,105,2.825,193,1.025,194,4.252,196,1.508,200,3.097,207,3.896,208,3.896,209,3.896,212,2.403,213,2.818,216,3.226,217,3.439,219,2.487,220,1.417,227,2.972,229,3.097,230,3.439,231,3.439,233,1.738,235,2.972,237,2.447,240,2.24,241,4.465,242,4.465,243,2.818,244,4.252,245,5.675,246,4.589,247,4.589,248,3.319,249,4.589,250,4.589,251,4.589,252,4.589,253,4.589,254,3.319,255,4.589,256,3.319,257,3.097]],["title/classes/CreateProductDto.html",[38,0.139,258,1.956]],["body/classes/CreateProductDto.html",[3,0.162,4,0.141,5,0.141,7,0.328,12,1.881,13,0.024,18,0.969,21,1.094,22,0.835,23,1.275,26,1.3,27,0.407,32,0.697,37,0.162,38,0.153,50,0.013,51,0.013,105,2.34,193,0.789,196,1.249,199,3.403,212,1.991,216,3.268,219,1.914,220,1.174,227,2.952,229,2.566,230,2.849,231,2.849,233,1.338,237,2.383,240,1.724,243,3.227,244,4.676,257,3.065,258,2.152,259,3.227,260,2.152,261,3.037,262,2.571,263,3.403,264,2.152,265,2.152,266,3.802,267,3.802,268,3.802,269,5.031,270,3.802,271,3.802,272,3.802,273,3.802,274,5.84,275,2.554,276,2.554,277,3.227,278,3.802,279,2.554,280,3.227,281,3.802,282,2.554,283,2.554,284,2.554,285,5.031,286,5.031,287,2.554,288,2.554,289,2.34,290,2.554,291,2.554,292,2.554,293,3.227,294,2.168,295,2.554,296,2.554]],["title/classes/CreateTableDto.html",[38,0.139,297,1.956]],["body/classes/CreateTableDto.html",[3,0.275,4,0.239,5,0.239,7,0.557,12,1.514,13,0.024,16,4.1,18,0.699,22,0.602,27,0.491,32,1.182,37,0.275,38,0.22,50,0.019,51,0.019,193,1.337,196,1.798,212,3.404,214,4.645,215,4.1,216,2.866,217,3.244,227,2.866,229,3.693,233,2.267,237,1.72,297,3.097,298,4.645,299,3.244,300,3.244,301,4.33,302,4.33]],["title/classes/CreateUserDto.html",[38,0.139,303,1.956]],["body/classes/CreateUserDto.html",[3,0.171,4,0.149,5,0.149,7,0.346,12,1.922,13,0.023,18,0.887,21,1.128,22,0.765,26,1.34,27,0.354,32,0.734,37,0.171,38,0.159,50,0.013,51,0.013,96,3.482,105,3.536,114,3.448,176,2.651,177,2.882,193,0.831,196,1.298,216,3.309,227,3.009,233,1.409,237,2.183,257,3.482,262,2.651,277,3.354,280,4.38,293,3.354,300,4.118,303,2.237,304,4.877,305,2.016,306,4.683,307,3.952,308,5.171,309,5.16,310,5.16,311,3.952,312,3.975,313,2.691,314,3.952,315,2.691,316,2.691,317,3.952,318,2.691,319,2.691,320,5.16,321,3.952,322,2.691,323,2.691,324,2.691,325,3.952,326,3.952,327,3.952,328,3.952,329,3.952,330,2.691,331,2.691,332,2.691,333,2.284,334,2.691,335,2.691,336,2.691,337,2.691]],["title/injectables/JwtStrategy.html",[78,0.943,144,2.127]],["body/injectables/JwtStrategy.html",[3,0.216,4,0.188,5,0.188,7,0.438,8,1.535,13,0.024,18,0.754,20,1.442,21,1.125,22,0.798,23,1.056,25,1.052,26,0.722,27,0.514,29,0.676,37,0.216,38,0.137,39,1.352,43,1.657,48,1.119,50,0.016,51,0.016,78,1.275,79,1.545,110,2.117,115,2.551,122,1.657,144,2.875,154,2.298,157,2.891,162,2.594,163,1.927,164,2.891,165,2.466,171,1.927,174,1.927,176,2.644,178,1.783,179,2.891,180,1.927,181,1.783,182,2.551,183,2.644,187,2.551,190,1.545,260,1.927,338,2.891,339,4.671,340,3.405,341,4.671,342,4.671,343,3.405,344,3.405,345,2.096,346,3.405,347,3.405,348,2.891,349,3.405,350,3.405,351,3.405,352,3.405,353,3.405,354,3.405,355,2.891,356,3.405,357,3.405,358,2.891,359,3.405,360,3.405]],["title/classes/LoginDto.html",[38,0.139,99,2.127]],["body/classes/LoginDto.html",[3,0.251,4,0.219,5,0.219,7,0.508,12,1.806,13,0.024,18,0.834,22,0.718,26,1.292,27,0.463,32,1.079,37,0.251,38,0.208,50,0.017,51,0.017,99,3.178,114,3.449,176,3.578,177,3.538,193,1.222,196,1.696,216,3.191,227,3.01,233,2.071,237,2.051,257,3.879,308,4.383,312,4.383,333,4.383,361,3.358,362,5.164,363,3.956,364,3.956,365,5.749]],["title/classes/LoginResponseDto.html",[38,0.139,127,2.127]],["body/classes/LoginResponseDto.html",[3,0.25,4,0.218,5,0.218,7,0.507,12,1.801,13,0.024,18,0.832,22,0.717,26,1.092,27,0.462,32,1.075,37,0.25,38,0.159,50,0.017,51,0.017,96,3.476,104,4.299,110,2.572,114,2.915,115,3.859,124,3.345,127,3.17,154,3.476,193,1.217,196,1.692,216,2.697,227,3.005,237,2.046,300,3.859,366,4.871,367,3.345,368,5.151,369,3.859,370,5.151,371,5.151,372,3.941,373,5.151,374,3.941]],["title/classes/Order.html",[38,0.139,235,1.81]],["body/classes/Order.html",[3,0.247,4,0.215,5,0.215,7,0.499,13,0.023,18,1.041,22,0.897,23,1.508,26,1.367,27,0.348,37,0.247,38,0.156,50,0.017,51,0.017,193,1.199,196,1.676,197,4.836,199,4.268,220,1.759,235,2.671,261,2.772,264,3.224,265,3.224,289,3.724,375,3.296,376,5.697,377,3.883,378,3.883,379,3.883,380,3.883,381,3.883,382,3.883,383,3.883]],["title/controllers/OrderController.html",[0,1.209,384,2.333]],["body/controllers/OrderController.html",[0,1.06,2,1.06,3,0.193,4,0.168,5,0.168,7,0.39,8,1.415,12,1.752,13,0.024,14,1.866,18,0.809,20,1.33,21,1.038,22,0.599,23,0.974,25,1.547,26,1.062,27,0.517,29,0.602,30,3.087,31,1.716,32,0.828,37,0.193,38,0.122,39,1.204,40,1.376,41,2.836,48,1.646,50,0.015,51,0.015,94,1.866,100,1.866,103,3.681,118,1.866,119,2.651,120,1.866,121,1.866,122,1.476,123,2.651,138,1.866,192,3.684,205,4.63,220,1.684,234,1.604,235,1.588,369,3.227,384,2.907,385,2.574,386,2.654,387,2.096,388,3.033,389,2.907,390,3.033,391,2.907,392,3.656,393,3.227,394,4.308,395,3.033,396,1.476,397,2.047,398,2.907,399,3.033,400,2.047,401,1.476,402,2.574,403,2.836,404,2.574,405,3.033,406,3.033,407,2.047,408,3.033,409,3.033,410,2.047,411,2.047,412,3.033]],["title/modules/OrderModule.html",[52,1.136,60,2.127]],["body/modules/OrderModule.html",[2,1.846,3,0.26,4,0.226,5,0.226,13,0.024,27,0.554,29,0.813,37,0.26,38,0.165,50,0.018,51,0.018,52,1.735,54,1.736,55,2.239,60,4.152,61,2.775,65,2.569,66,1.992,67,1.992,69,2.765,70,2.989,150,2.52,384,3.944,403,3.704,404,3.475,413,3.475,414,3.475,415,4.094,416,4.094,417,4.094]],["title/injectables/OrderService.html",[78,0.943,403,1.956]],["body/injectables/OrderService.html",[3,0.135,4,0.117,5,0.117,7,0.273,8,1.085,13,0.025,18,0.738,20,1.251,21,1.263,22,0.564,23,0.916,25,1.251,26,0.859,27,0.47,29,0.421,37,0.135,38,0.085,39,0.843,40,0.963,43,2.225,48,1.331,50,0.011,51,0.011,78,0.901,79,0.963,108,1.729,110,1.609,162,2.552,163,1.201,165,1.816,170,2.494,171,1.201,174,1.201,178,2.122,180,2.293,181,2.122,182,1.59,183,2.293,184,1.306,192,2.814,212,2.394,220,1.691,234,1.509,235,1.111,237,1.311,239,4.724,241,1.801,242,2.802,261,1.032,262,1.201,263,1.59,345,1.306,358,2.802,386,2.225,387,1.606,396,1.606,401,1.032,402,1.801,403,1.868,418,1.801,419,1.432,420,2.122,421,2.734,422,2.032,423,2.122,424,1.306,425,2.122,426,2.122,427,2.122,428,1.59,429,1.201,430,1.201,431,1.432,432,2.122,433,3.301,434,2.122,435,3.301,436,3.301,437,2.122,438,3.301,439,2.122,440,2.122,441,3.301,442,2.588,443,4.572,444,2.122,445,2.122,446,2.122,447,2.122,448,2.122,449,2.122,450,2.122,451,1.432,452,2.122,453,4.936,454,2.122,455,2.734,456,2.122,457,1.432]],["title/modules/PrismaModule.html",[52,1.136,61,1.466]],["body/modules/PrismaModule.html",[3,0.275,4,0.239,5,0.239,13,0.023,27,0.491,29,0.86,37,0.275,38,0.174,50,0.019,51,0.019,52,1.798,54,1.836,55,2.321,61,2.859,65,2.663,66,2.107,67,2.107,69,2.866,165,2.786,458,3.675,459,3.675,460,3.675,461,4.33,462,5.472,463,4.33]],["title/injectables/PrismaService.html",[78,0.943,165,1.373]],["body/injectables/PrismaService.html",[3,0.249,4,0.217,5,0.217,7,0.505,8,1.688,13,0.024,18,0.83,20,1.212,21,0.946,22,0.546,23,0.888,25,1.587,27,0.461,29,0.779,37,0.249,38,0.158,50,0.017,51,0.017,78,1.402,79,1.781,162,3.208,165,2.041,178,2.691,260,2.908,428,2.942,464,3.333,465,5.728,466,5.138,467,6.47,468,5.138,469,6.076,470,3.926,471,3.333,472,3.926,473,3.926,474,3.926,475,3.926,476,3.926]],["title/classes/Product.html",[38,0.139,261,1.682]],["body/classes/Product.html",[3,0.245,4,0.213,5,0.213,7,0.495,13,0.023,18,1.06,21,1.367,22,0.913,23,1.455,26,1.412,37,0.245,38,0.155,50,0.017,51,0.017,193,1.19,196,1.668,212,2.658,220,1.753,237,2.254,261,2.47,262,3.213,263,4.253,264,3.213,265,3.213,289,3.713,477,3.272,478,3.854,479,3.854,480,3.854,481,3.854,482,3.854,483,3.854,484,3.854]],["title/controllers/ProductController.html",[0,1.209,485,2.333]],["body/controllers/ProductController.html",[0,0.829,2,0.829,3,0.151,4,0.131,5,0.131,7,0.305,8,1.181,12,1.821,13,0.024,14,1.459,18,0.841,20,1.496,21,1.167,22,0.674,23,1.095,25,1.608,26,1.273,27,0.492,29,0.47,30,3.103,31,1.342,32,0.647,37,0.151,38,0.095,39,0.941,40,1.075,41,2.948,48,1.592,50,0.012,51,0.012,94,1.459,100,1.459,103,3.959,118,2.212,119,2.212,120,1.459,121,1.459,122,1.153,123,2.212,138,1.459,190,1.97,204,3.051,220,1.949,234,1.339,236,2.426,244,4.395,258,3.103,261,1.153,369,4.107,386,2.358,387,1.749,389,2.426,391,2.426,393,2.693,396,1.153,397,1.6,398,2.426,400,1.6,401,1.153,407,1.6,410,1.6,411,1.6,485,2.426,486,2.012,487,2.034,488,2.37,489,2.37,490,1.342,491,2.37,492,3.594,493,2.37,494,2.37,495,3.051,496,2.37,497,2.37,498,1.342,499,3.611,500,1.776,501,2.693,502,2.37,503,1.776,504,1.776,505,1.776,506,1.342,507,2.457,508,2.012,509,2.37,510,2.37,511,2.37,512,2.37,513,2.37,514,1.776,515,1.776,516,2.37,517,1.776,518,1.776,519,1.776,520,2.37]],["title/modules/ProductModule.html",[52,1.136,62,2.127]],["body/modules/ProductModule.html",[2,1.846,3,0.26,4,0.226,5,0.226,13,0.024,27,0.554,29,0.813,37,0.26,38,0.165,50,0.018,51,0.018,52,1.735,54,1.736,55,2.239,61,2.775,62,4.152,65,2.569,66,1.992,67,1.992,69,2.765,70,2.989,150,2.52,485,3.944,507,3.704,508,3.475,521,3.475,522,4.094,523,3.475,524,4.094,525,4.094]],["title/injectables/ProductService.html",[78,0.943,507,1.956]],["body/injectables/ProductService.html",[3,0.146,4,0.127,5,0.127,7,0.296,8,1.155,13,0.024,18,0.875,20,1.588,21,1.238,22,0.715,23,1.162,25,1.588,26,1.263,27,0.486,29,0.457,37,0.146,38,0.093,39,0.915,40,1.045,43,2.502,48,1.689,50,0.012,51,0.012,78,0.96,79,1.045,108,3.045,162,2.899,163,1.303,165,1.896,170,2.938,171,1.303,174,1.303,178,2.234,180,2.414,181,2.234,183,2.414,184,2.625,190,1.595,220,1.909,234,1.31,236,2.373,258,2.702,261,1.711,294,1.955,345,1.417,386,2.323,387,1.711,396,1.711,401,1.121,419,1.554,421,2.373,422,2.164,424,3.336,429,1.303,430,1.303,431,1.554,451,2.373,455,3.47,457,2.879,487,2.414,490,1.99,498,1.99,499,2.938,506,1.303,507,1.99,526,1.955,527,2.303,528,2.303,529,2.303,530,2.303,531,2.303,532,2.303,533,2.303,534,2.303,535,4.265,536,1.725,537,2.303,538,2.634,539,2.303]],["title/classes/Table.html",[38,0.139,442,1.956]],["body/classes/Table.html",[3,0.272,4,0.237,5,0.237,7,0.55,13,0.023,18,1.013,22,0.873,23,1.496,26,1.151,37,0.272,38,0.172,50,0.018,51,0.018,193,1.321,196,1.784,212,3.392,220,1.842,264,3.377,265,3.377,289,3.862,442,3.073,540,3.631,541,4.277,542,4.277,543,4.277,544,4.277]],["title/controllers/TableController.html",[0,1.209,545,2.333]],["body/controllers/TableController.html",[0,0.825,2,0.825,3,0.15,4,0.131,5,0.131,7,0.303,8,1.177,12,1.818,13,0.024,14,1.452,18,0.839,20,1.493,21,1.164,22,0.672,23,1.093,25,1.605,26,1.272,27,0.51,29,0.468,30,3.097,31,1.336,32,0.644,37,0.15,38,0.095,39,0.937,41,2.942,48,1.588,50,0.012,51,0.012,94,1.452,100,1.452,108,3.204,118,2.205,119,2.205,120,1.452,121,1.452,122,1.148,123,2.205,138,1.452,162,2.107,190,1.964,215,4.389,220,1.69,234,1.334,297,2.736,386,2.352,387,1.743,389,2.417,391,2.417,392,3.04,396,1.148,397,1.592,398,2.417,400,1.592,401,1.148,407,1.592,410,1.592,411,1.592,422,1.452,424,3.368,442,2.027,487,2.027,490,1.336,498,1.336,500,1.768,501,2.684,503,1.768,504,1.768,505,1.768,506,1.336,514,1.768,515,1.768,517,1.768,518,1.768,519,1.768,545,2.417,546,2.003,547,5.859,548,2.36,549,2.36,550,3.04,551,2.36,552,3.582,553,2.36,554,2.36,555,2.975,556,2.36,557,2.684,558,2.003,559,2.451,560,2.003,561,2.36,562,2.36,563,2.36,564,2.36,565,2.36,566,2.36,567,2.36]],["title/modules/TableModule.html",[52,1.136,63,2.127]],["body/modules/TableModule.html",[2,1.846,3,0.26,4,0.226,5,0.226,13,0.024,27,0.554,29,0.813,37,0.26,38,0.165,50,0.018,51,0.018,52,1.735,54,1.736,55,2.239,61,2.775,63,4.152,65,2.569,66,1.992,67,1.992,69,2.765,70,2.989,150,2.52,545,3.944,559,3.704,560,3.475,568,3.475,569,3.475,570,4.094,571,4.094,572,4.094]],["title/injectables/TableService.html",[78,0.943,559,1.956]],["body/injectables/TableService.html",[3,0.146,4,0.127,5,0.127,7,0.296,8,1.155,13,0.024,18,0.875,20,1.588,21,1.238,22,0.715,23,1.162,25,1.588,26,1.263,27,0.486,29,0.457,37,0.146,38,0.093,39,0.915,40,1.045,43,2.502,48,1.689,50,0.012,51,0.012,78,0.96,79,1.045,108,3.045,162,2.899,163,1.303,165,1.896,170,2.938,171,1.303,174,1.303,178,2.234,180,2.414,181,2.234,183,2.414,184,2.625,190,1.595,220,1.909,234,1.31,297,2.702,345,1.417,386,2.323,387,1.711,396,1.711,401,1.121,419,1.554,421,2.373,422,2.164,424,3.336,429,1.303,430,1.303,431,1.554,442,1.99,451,2.373,455,3.47,457,2.879,487,2.414,490,1.99,498,1.99,506,1.303,536,1.725,538,2.634,555,2.938,557,2.634,558,1.955,559,1.99,573,1.955,574,2.303,575,2.303,576,2.303,577,2.303,578,2.303,579,2.303,580,2.303,581,2.303,582,4.265,583,2.303,584,2.303]],["title/classes/UpdateProductDto.html",[38,0.139,499,2.127]],["body/classes/UpdateProductDto.html",[3,0.312,4,0.272,5,0.272,13,0.023,27,0.531,32,1.342,37,0.312,38,0.198,50,0.02,51,0.02,193,1.518,234,1.831,236,3.318,240,3.318,258,2.783,260,2.783,499,3.643,585,4.173,586,3.684,587,4.917]],["title/classes/UpdateTableDto.html",[38,0.139,555,2.127]],["body/classes/UpdateTableDto.html",[3,0.312,4,0.272,5,0.272,13,0.023,27,0.531,32,1.342,37,0.312,38,0.198,50,0.02,51,0.02,193,1.518,234,1.831,260,2.783,297,2.783,299,3.684,555,3.643,557,3.684,586,3.684,588,4.173,589,4.917]],["title/classes/UpdateUserDto.html",[38,0.139,590,2.127]],["body/classes/UpdateUserDto.html",[3,0.312,4,0.272,5,0.272,13,0.023,27,0.531,32,1.342,37,0.312,38,0.198,50,0.02,51,0.02,193,1.518,234,1.831,260,2.783,303,2.783,305,3.684,586,3.684,590,3.643,591,4.173,592,3.684,593,4.917]],["title/classes/User.html",[38,0.139,110,1.373]],["body/classes/User.html",[3,0.245,4,0.213,5,0.213,7,0.495,13,0.023,18,1.06,21,1.367,22,0.913,23,1.455,26,1.442,37,0.245,38,0.155,50,0.017,51,0.017,110,2.016,176,3.213,177,3.494,193,1.19,196,1.668,220,1.753,262,3.213,264,3.213,265,3.213,289,3.713,594,3.272,595,3.854,596,3.854,597,3.854,598,3.854,599,3.854,600,3.854,601,3.854]],["title/controllers/UserController.html",[0,1.209,602,2.333]],["body/controllers/UserController.html",[0,0.84,2,0.84,3,0.153,4,0.133,5,0.133,7,0.309,8,1.193,12,1.832,13,0.024,14,1.479,18,0.846,20,1.507,21,1.175,22,0.679,23,1.103,25,1.618,26,1.278,27,0.494,29,0.477,30,3.119,31,1.36,32,0.656,37,0.153,38,0.097,39,0.954,40,1.09,41,2.965,48,1.721,50,0.012,51,0.012,94,1.479,100,1.479,103,3.976,110,0.954,114,2.965,118,2.235,119,2.235,120,1.479,121,1.479,122,1.169,123,3.225,138,3.003,190,1.986,220,1.702,234,1.353,303,3.119,386,2.374,387,1.767,389,2.451,391,2.451,393,2.721,396,1.169,397,1.621,398,2.451,400,1.621,401,1.169,407,1.621,410,1.621,411,1.621,487,2.055,490,1.36,495,3.082,498,1.36,500,1.8,501,2.721,503,1.8,504,1.8,505,1.8,506,1.36,514,1.8,515,1.8,517,1.8,518,1.8,519,1.8,550,3.082,590,3.626,592,2.721,602,2.451,603,2.039,604,2.403,605,2.403,606,2.403,607,2.403,608,2.403,609,2.403,610,2.403,611,3.631,612,2.403,613,2.403,614,2.478,615,2.039,616,2.403,617,2.403,618,2.403,619,2.403,620,2.403,621,2.403,622,2.403,623,2.403]],["title/modules/UserModule.html",[52,1.136,64,2.127]],["body/modules/UserModule.html",[2,1.846,3,0.26,4,0.226,5,0.226,13,0.024,27,0.554,29,0.813,37,0.26,38,0.165,50,0.018,51,0.018,52,1.735,54,1.736,55,2.239,61,2.775,64,4.152,65,2.569,66,1.992,67,1.992,69,2.765,70,2.989,150,2.52,602,3.944,614,3.704,615,3.475,624,3.475,625,3.475,626,4.094,627,4.094,628,4.094]],["title/injectables/UserService.html",[78,0.943,614,1.956]],["body/injectables/UserService.html",[3,0.117,4,0.102,5,0.102,7,0.236,8,0.969,13,0.024,18,0.837,20,1.427,21,1.248,22,0.686,23,1.045,25,1.427,26,1.178,27,0.465,29,0.365,37,0.117,38,0.074,39,0.731,40,0.835,43,2.249,48,1.519,50,0.01,51,0.01,78,0.805,79,0.835,108,2.821,110,1.171,162,2.886,163,1.041,165,1.677,170,2.599,171,1.041,173,2.21,174,1.041,175,3.134,176,1.67,177,2.272,178,2.421,180,2.616,181,2.421,183,2.616,184,2.272,190,1.916,196,0.969,220,1.86,234,1.375,239,4.443,262,1.67,264,1.67,265,1.67,303,2.39,345,1.132,355,2.504,386,2.055,387,1.435,396,1.435,401,0.895,419,1.242,421,1.991,422,1.815,424,3.036,429,1.041,430,1.041,431,1.242,451,1.991,453,4.188,455,3.12,457,2.491,487,2.09,490,1.67,498,1.67,506,1.041,536,1.378,538,2.21,590,2.599,592,2.21,614,1.67,629,1.562,630,3.692,631,1.84,632,1.84,633,1.84,634,1.84,635,1.84,636,1.84,637,1.84,638,1.562,639,1.562,640,1.84,641,1.84,642,1.84,643,1.84,644,4.933,645,3.692,646,4.223,647,2.95,648,2.95,649,2.95,650,2.95,651,2.95,652,2.95,653,2.95,654,3.692,655,2.95,656,1.84]],["title/coverage.html",[657,3.535]],["body/coverage.html",[0,1.998,1,1.789,5,0.147,6,2.25,13,0.024,22,0.369,34,1.5,38,0.265,50,0.013,51,0.013,78,1.655,80,2.25,92,1.789,93,2.25,99,1.631,110,1.053,125,1.5,127,1.631,131,1.986,144,1.631,161,2.25,165,1.053,181,1.388,192,1.631,194,2.928,195,2.25,200,1.789,235,2.046,240,3.132,258,1.5,259,2.25,261,1.29,297,1.5,298,2.25,299,2.928,303,1.5,304,2.25,305,2.928,338,2.25,361,2.25,366,2.25,367,2.25,375,2.25,384,1.789,385,2.25,403,1.5,418,2.25,429,1.5,430,1.5,442,2.212,464,2.25,477,2.25,485,1.789,486,2.25,499,1.631,507,1.5,526,2.25,540,2.25,545,1.789,546,2.25,555,1.631,559,1.5,573,2.25,585,2.25,588,2.25,590,1.631,591,2.25,594,2.25,602,1.789,603,2.25,614,1.5,629,2.25,657,1.986,658,2.651,659,2.651,660,2.651,661,7.024,662,4.642,663,5.715,664,2.25,665,2.25,666,2.651,667,5.715,668,2.25,669,3.908,670,2.25,671,4.642,672,4.642,673,3.908,674,2.651,675,4.642,676,5.123,677,2.25,678,2.651]],["title/dependencies.html",[55,1.763,679,2.449]],["body/dependencies.html",[13,0.024,29,0.822,32,1.13,33,4.516,38,0.214,50,0.018,51,0.018,55,1.757,90,3.516,122,2.016,149,3.104,154,2.796,173,3.104,228,3.516,233,2.169,348,4.989,428,3.104,680,6.202,681,4.143,682,4.143,683,4.143,684,4.143,685,4.143,686,4.143,687,4.143,688,4.143,689,4.143,690,4.143,691,4.143,692,4.143,693,4.143,694,4.143,695,4.143,696,4.143,697,4.143,698,4.143,699,4.143,700,4.143,701,4.143,702,4.143,703,4.143,704,4.143]],["title/miscellaneous/functions.html",[705,1.947,706,3.529]],["body/miscellaneous/functions.html",[7,0.626,13,0.022,20,1.504,21,1.173,22,0.678,23,1.101,25,1.504,50,0.02,51,0.02,210,4.135,429,3.331,430,2.757,668,4.135,670,5.368,677,4.996,705,3.287,706,4.135,707,4.871,708,4.871,709,4.871,710,6.324]],["title/index.html",[7,0.371,711,2.886,712,2.886]],["body/index.html",[4,0.206,13,0.024,50,0.017,51,0.017,84,3.167,87,3.167,237,1.482,471,3.167,657,2.796,713,3.731,714,3.731,715,4.969,716,3.731,717,3.731,718,3.731,719,3.731,720,3.731,721,5.586,722,3.731,723,3.731,724,3.731,725,3.731,726,6.51,727,3.731,728,3.731,729,6.379,730,3.731,731,3.731,732,4.969,733,3.731,734,3.731,735,3.731,736,3.731,737,4.969,738,4.969,739,3.731,740,3.731,741,3.731,742,4.969,743,4.969,744,3.731,745,3.731,746,3.731,747,3.731,748,3.731,749,3.167,750,3.731,751,3.731,752,3.731,753,3.731,754,3.731,755,3.731,756,3.731,757,3.731,758,3.731,759,3.167,760,3.731,761,3.731,762,3.731,763,3.731,764,3.731,765,3.731,766,3.167]],["title/modules.html",[54,2.001]],["body/modules.html",[13,0.019,50,0.019,51,0.019,53,3.142,54,1.974,59,2.865,60,2.865,61,1.974,62,2.865,63,2.865,64,2.865,749,5.814,767,6.849,768,6.849,769,6.849]],["title/overview.html",[770,4.005]],["body/overview.html",[2,1.105,13,0.024,34,2.9,50,0.015,51,0.015,53,4.625,54,1.34,55,1.881,56,2.682,57,2.682,58,2.682,59,3.977,60,3.834,61,2.807,62,3.834,63,3.834,64,3.834,65,2.158,66,1.538,67,1.538,79,1.434,125,2.9,141,2.682,143,2.682,144,3.153,165,2.474,193,0.976,403,2.9,413,2.682,414,2.682,458,2.682,459,2.682,460,2.682,507,2.9,521,2.682,523,2.682,559,2.9,568,2.682,569,2.682,614,2.9,624,2.682,625,2.682,770,2.682,771,3.16,772,3.16,773,3.16,774,3.16]],["title/properties.html",[196,1.366,679,2.449]],["body/properties.html",[13,0.023,50,0.021,51,0.021,196,1.72,237,2.079,759,4.443,766,4.443,775,5.234,776,5.234,777,5.234]],["title/miscellaneous/variables.html",[705,1.947,778,3.529]],["body/miscellaneous/variables.html",[7,0.612,11,4.041,13,0.023,43,2.824,48,1.564,50,0.02,51,0.02,110,2.487,131,4.349,187,3.567,190,2.16,638,4.041,639,4.041,664,4.041,665,4.927,705,3.213,778,4.041,779,4.761,780,4.761,781,4.761,782,4.761,783,4.761,784,4.761]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":776,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["1.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["12.34",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["136c",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["14",{"_index":774,"title":{},"body":{"overview.html":{}}}],["1})@isnumber",{"_index":301,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["2",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["24h",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@ispositive()@apiproperty({description",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3.0.2",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["3a2463bf838b",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["3eb54f96",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["4.0.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["449e",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["4c14",{"_index":251,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.0.1",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":772,"title":{},"body":{"overview.html":{}}}],["7",{"_index":771,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":773,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["_count",{"_index":454,"title":{},"body":{"injectables/OrderService.html":{}}}],["abbb7373",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["abcd@123",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["abcd@123'})@isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":750,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":300,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":509,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":561,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":616,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":471,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":476,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":720,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["autenticado",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":92,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":759,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":125,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["b8d2",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["backers",{"_index":751,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('senhas",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["baseurl}/api",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["bcrypt",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["bd06",{"_index":252,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["breve",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["browse",{"_index":769,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":767,"title":{},"body":{"modules.html":{}}}],["building",{"_index":716,"title":{},"body":{"index.html":{}}}],["c58c",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["c7ae0a703ea7",{"_index":253,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["catch(handleerror",{"_index":451,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["cebola",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["check",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["class",{"_index":38,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":193,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":413,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":415,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":414,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":458,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":459,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":460,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":521,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":522,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":523,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":568,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":570,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":569,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":624,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":626,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":625,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["confirmação",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{}}}],["const",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":419,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prismaservice",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(private",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":510,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":562,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":657,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(createorderdto",{"_index":388,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":488,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":604,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":422,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":264,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":192,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderproductdto",{"_index":200,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":258,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":297,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":303,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criar",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["dados",{"_index":373,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["de",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":638,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":517,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":606,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete(@param('id",{"_index":519,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":490,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{}}}],["descrição",{"_index":266,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["deve",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":728,"title":{},"body":{"index.html":{}}}],["docs",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.products.map((product",{"_index":445,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.tablenumber",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.userid",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto/create",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["e2e",{"_index":739,"title":{},"body":{"index.html":{}}}],["each",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["editar",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["efficient",{"_index":717,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":466,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":468,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["entities/order.entity",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["entities/product.entity",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":558,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["est",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["example",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["excluir",{"_index":550,"title":{},"body":{"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["executioncontext",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{}}}],["expiresin",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":462,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":260,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6imf5bgfuqgjvc2nhcmluby5jb20ilcjwyxnzd29yzci6inlhmgdzcwh5nhd6dnv2yjqifq.yn_8",{"_index":370,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["false",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fina",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["findall",{"_index":386,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":387,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["forbiddenexception",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{}}}],["forbiddenexception('mesa",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{}}}],["fraca",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":715,"title":{},"body":{"index.html":{}}}],["fullurl",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["function",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":706,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerado",{"_index":368,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":711,"title":{"index.html":{}},"body":{}}],["grow",{"_index":746,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["headers",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["here",{"_index":756,"title":{},"body":{"index.html":{}}}],["http://localhost:3333",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":518,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content)@delete(':id')@apioperation({summary",{"_index":549,"title":{},"body":{"controllers/TableController.html":{}}}],["https://avatars.githubusercontent.com/u/7906171",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://avatars.githubusercontent.com/u/7906171'})@isurl",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["https://nestjs.com",{"_index":763,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":262,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["imagem",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["implements",{"_index":473,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":450,"title":{},"body":{"injectables/OrderService.html":{}}}],["incluindo",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":469,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informadas",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["inherited",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":725,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":727,"title":{},"body":{"index.html":{}}}],["inválidas",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":365,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispositive",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["isrecordfound",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["isstring",{"_index":257,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":243,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":362,"title":{},"body":{"classes/LoginDto.html":{}}}],["istablefound",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["isurl",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isuserfound",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{}}}],["isuuid",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["itens",{"_index":255,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["join",{"_index":753,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":144,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":760,"title":{},"body":{"index.html":{}}}],["license",{"_index":766,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":743,"title":{},"body":{"index.html":{}}}],["lista",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(logindto",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":99,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":127,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["massa",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["matches",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["mesa",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":552,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["mge9mfgsnyhnpeh_zznp7ykvsbq3alug9hmcsm",{"_index":371,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["minlength",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":705,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":742,"title":{},"body":{"index.html":{}}}],["mode",{"_index":732,"title":{},"body":{"index.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":755,"title":{},"body":{"index.html":{}}}],["muito",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["myśliwiec",{"_index":761,"title":{},"body":{"index.html":{}}}],["n",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["name",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":721,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":765,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nickname",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["nico",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["node.js",{"_index":714,"title":{},"body":{"index.html":{}}}],["nome",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notfoundexception",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('usuário",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{}}}],["notfoundexception(`id",{"_index":457,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":726,"title":{},"body":{"index.html":{}}}],["number",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{}}}],["não",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["object",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["observações",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["onmoduleinit",{"_index":467,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":744,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":235,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["order.controller",{"_index":417,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":195,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:12",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:20",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:31",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":384,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":60,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderproducts",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderservice",{"_index":403,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["os",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":770,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":679,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":586,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":587,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":589,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":593,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":514,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["paulo",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["paulosalvatore",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["paulosalvatore'})@isstring",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["payload",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":369,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["perfil",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["pizza",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["please",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["post",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["preço",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":263,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{}}}],["prisma",{"_index":421,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["prisma.ordercreateinput",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.service",{"_index":463,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":465,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":61,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":165,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":261,"title":{"classes/Product.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":525,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.description",{"_index":448,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.dto",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":240,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":254,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:18",{"_index":256,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:25",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:42",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.productid",{"_index":446,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.quantity",{"_index":447,"title":{},"body":{"injectables/OrderService.html":{}}}],["product.service",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["product:11",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product:18",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product:2",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product:25",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product:35",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product:7",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product:8",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["productcontroller",{"_index":485,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":241,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":734,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":62,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{}}}],["productservice",{"_index":507,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":244,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["profile",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":713,"title":{},"body":{"index.html":{}}}],["project",{"_index":745,"title":{},"body":{"index.html":{}}}],["promise",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":196,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["quantidade",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":242,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["queijo",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["read",{"_index":754,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizar",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["recheada",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["record",{"_index":455,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["remover",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{}}}],["repository",{"_index":724,"title":{},"body":{"index.html":{}}}],["req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["req.get('host",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":367,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":372,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:15",{"_index":374,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":729,"title":{},"body":{"index.html":{}}}],["running",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["salvatore",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["salvatore'})@isstring",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["scalable",{"_index":718,"title":{},"body":{"index.html":{}}}],["secret",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":453,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["senha",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ser",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["side",{"_index":719,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":748,"title":{},"body":{"index.html":{}}}],["src/.../handle",{"_index":708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":366,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":361,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":363,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":364,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":194,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":375,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:4",{"_index":378,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:5",{"_index":382,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":380,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":377,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":381,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":379,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":385,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:18",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:26",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:34",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":416,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":418,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:13",{"_index":420,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:16",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:66",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:89",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":461,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":464,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":470,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":472,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/create",{"_index":259,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":585,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":383,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":477,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":480,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":482,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":479,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":481,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":483,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":478,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":484,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:30",{"_index":489,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:38",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:54",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":524,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:16",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:22",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:32",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:49",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":298,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":588,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts",{"_index":540,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":542,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":543,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":541,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":544,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":546,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:31",{"_index":553,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:39",{"_index":554,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:47",{"_index":548,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:55",{"_index":556,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:64",{"_index":551,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":571,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":573,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":577,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:16",{"_index":575,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:22",{"_index":578,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:32",{"_index":579,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:49",{"_index":576,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":574,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":591,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["src/user/entities/user.entity.ts",{"_index":594,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":596,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":599,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":598,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":600,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":597,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":601,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":603,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":627,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":629,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:63",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:98",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":730,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":733,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":735,"title":{},"body":{"index.html":{}}}],["started",{"_index":712,"title":{"index.html":{}},"body":{}}],["starter",{"_index":723,"title":{},"body":{"index.html":{}}}],["statements",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["stay",{"_index":757,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":749,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":768,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["são",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":442,"title":{"classes/Table.html":{}},"body":{"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["table.controller",{"_index":572,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":557,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:10",{"_index":302,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":560,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table/table.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":545,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tableid",{"_index":376,"title":{},"body":{"classes/Order.html":{}}}],["tablemodule",{"_index":63,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tableservice",{"_index":559,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":738,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":741,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":740,"title":{},"body":{"index.html":{}}}],["tests",{"_index":737,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":747,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":474,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":475,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(fullurl",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(createorderdto",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":449,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":452,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":456,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.create",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":583,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.count",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.table.create",{"_index":581,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":584,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":580,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":582,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.count",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.user.delete",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prismaservice.user.findunique",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.productservice.create(createproductdto",{"_index":511,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":520,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":512,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":513,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":516,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":565,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":567,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":563,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":564,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":566,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["todas",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{}}}],["todos",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["tomate",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["touch",{"_index":758,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":764,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":722,"title":{},"body":{"index.html":{}}}],["ui",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":547,"title":{},"body":{"controllers/TableController.html":{}}}],["unauthorizedexception",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('credenciais",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":736,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":777,"title":{},"body":{"properties.html":{}}}],["update",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":515,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":265,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":499,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":555,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":590,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useguards",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":110,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":628,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":592,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":615,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":602,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/Order.html":{}}}],["usermodule",{"_index":64,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userselect",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":614,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuário'})@useguards(undefined)@apibearerauth",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["usuário'})@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários",{"_index":619,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":609,"title":{},"body":{"controllers/UserController.html":{}}}],["validate",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":639,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":778,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":775,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{}}}],["watch",{"_index":731,"title":{},"body":{"index.html":{}}}],["website",{"_index":762,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":752,"title":{},"body":{"index.html":{}}}],["z",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Headers, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Status da aplicação',\n  })\n  getAppStatus(@Req() req: Request): string {\n    const fullUrl = req.protocol + '://' + req.get('host'); // http://localhost:3333\n    return this.appService.getAppStatus(fullUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string): string {\n    return `Server is running! 🚀\\n Please check ${baseUrl}/api for Swagger docs...`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User): User {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prismaService: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  async login(data: LoginDto): Promise {\n    const { nickname, password } = data;\n\n    const user = await this.prismaService.user.findUnique({\n      where: { nickname },\n    });\n\n    if (!user) {\n      throw new NotFoundException('Usuário não encontrado');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Credenciais inválidas');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user: user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista de produtos no pedido, incluindo quantidade e observações', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Número da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do Usuário', example: '3eb54f96-136c-449e-b8d2-3a2463bf838b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsNumber, IsPositive, IsUUID, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do Usuário',\n    example: '3eb54f96-136c-449e-b8d2-3a2463bf838b',\n  })\n  userId: string;\n\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número da mesa',\n    example: 1,\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description:\n      'Lista de produtos no pedido, incluindo quantidade e observações',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola e sem tomate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: 'abbb7373-c58c-4c14-bd06-c7ae0a703ea7'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Quantidade de itens', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: 'abbb7373-c58c-4c14-bd06-c7ae0a703ea7',\n  })\n  productId: string;\n\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens',\n    example: 1,\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Sem cebola e sem tomate',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Product\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                userId\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição breve do produto', example: 'Queijo mussarela, massa fina, borda recheada'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsPositive()@ApiProperty({description: 'Preço do produto', example: 12.34})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Preço do produto', example: '12.34'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         Product\n\n                            \n                        \n                    \n                        \n                                Defined in         Product:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive, IsString, IsUrl, IsUUID } from 'class-validator';\nimport { Product } from '../entities/product.entity';\n\nexport class CreateProductDto extends Product {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição breve do produto',\n    example: 'Queijo mussarela, massa fina, borda recheada',\n  })\n  description: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsPositive()\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 12.34,\n  })\n  price: number;\n\n  @IsUUID()\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: '12.34',\n  })\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Número da mesa', example: 1})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\nexport class CreateTableDto {\n  @ApiProperty({\n    description: 'Número da mesa',\n    example: 1,\n  })\n  @IsNumber()\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação de senha deve ser igual a senha', example: 'Abcd@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://avatars.githubusercontent.com/u/7906171'})@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do usuário', example: 'Paulo Salvatore'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome de usuário para login. Deve ser único', example: 'paulosalvatore'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@123'})@IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'Nome de usuário para login. Deve ser único',\n    example: 'paulosalvatore',\n  })\n  @IsString()\n  nickname: string;\n\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'Paulo Salvatore',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@123',\n  })\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação de senha deve ser igual a senha',\n    example: 'Abcd@123',\n  })\n  confirmPassword: string;\n\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://avatars.githubusercontent.com/u/7906171',\n  })\n  @IsUrl()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private prismaService: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prismaService.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new NotFoundException('Usuário não existe ou não está autenticado');\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@123',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo Login', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo Login',\n    example:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                tableId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from 'src/product/entities/product.entity';\n\nexport class Order {\n  id?: string;\n  userId: string;\n  tableId: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido',\n  })\n  create(@Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas os pedidos',\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Order } from './entities/order.entity';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateOrderDto): Promise {\n    const isUserFound = await this.prisma.user.count({\n      where: { id: dto.userId },\n    });\n\n    if (!isUserFound) {\n      throw new NotFoundException('Usuário não existe.');\n    }\n\n    const isTableFound = await this.prisma.table.count({\n      where: { number: dto.tableNumber },\n    });\n\n    if (!isTableFound) {\n      throw new ForbiddenException('Mesa não existe.');\n    }\n\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: dto.userId,\n        },\n      },\n      table: {\n        connect: {\n          number: dto.tableNumber,\n        },\n      },\n      orderProducts: {\n        createMany: {\n          data: dto.products.map((product) => ({\n            productId: product.productId,\n            quantity: product.quantity,\n            description: product.description,\n          })),\n        },\n      },\n    };\n\n    return this.prisma.order\n      .create({\n        data,\n        include: {\n          table: true,\n          orderProducts: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            orderProducts: true,\n          },\n        },\n      },\n    });\n  }\n\n  async findOne(id: string) {\n    const record = await this.prisma.order.findUnique({\n      where: { id },\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        orderProducts: {\n          select: {\n            quantity: true,\n            description: true,\n            product: {\n              select: {\n                name: true,\n                image: true,\n                price: true,\n              },\n            },\n          },\n        },\n      },\n    });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ProductService } from './product.service';\n\n@ApiTags('product')\n@Controller('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto',\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos',\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um produto pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um produto pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um produto pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    return this.prisma.product.create({ data }).catch(handleError);\n  }\n\n  async findOne(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.product\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    const isRecordFound = await this.prisma.product.findUnique({\n      where: { id },\n    });\n\n    if (!isRecordFound) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return this.prisma.product.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')@ApiOperation({summary: 'Excluir uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@Controller('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\nexport class TableController {\n  constructor(private tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as mesas',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma mesa',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar uma mesa',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar uma mesa',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Excluir uma mesa',\n  })\n  async delete(@Param('id') id: string): Promise {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(handleError);\n  }\n\n  async findOne(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.table\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    const isRecordFound = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!isRecordFound) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return this.prisma.table.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Excluir um usuário'})@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um usuário'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpStatus,\n  HttpCode,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um usuário',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Excluir um usuário',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  delete(@Param('id') id: string) {\n    return this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    password: false,\n    name: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    password: false,\n    name: true,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('Senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({ data, select: this.userSelect })\n      .catch(handleError);\n  }\n\n  async findOne(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('Senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = {\n      ...dto,\n    };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(dto.password, 10);\n    }\n\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    const isRecordFound = await this.prisma.user.findUnique({ where: { id } });\n\n    if (!isRecordFound) {\n      throw new NotFoundException(`ID ${id} não encontrado.`);\n    }\n\n    return this.prisma.user.delete({\n      where: { id },\n      select: this.userSelect,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.13.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user as User;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
